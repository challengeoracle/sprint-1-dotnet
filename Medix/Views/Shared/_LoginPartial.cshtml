@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Olá @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="btn btn-danger">Sair</button>
            </form>
        </li>
    }
    else
    {
        // A classe "auth-actions-group" é adicionada na tag <ul>
        <ul class="navbar-nav auth-actions-group">
            <li class="nav-item">
                <a class="auth-action-link" id="login" asp-area="Identity" asp-page="/Account/Login">Entrar</a>
            </li>
            <li class="nav-item">
                <a class="auth-action-link is-primary" id="register" asp-area="Identity" asp-page="/Account/Register">Registrar</a>
            </li>
        </ul>
    }
</ul>